const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/_app/immutable/entry/app.Cv-9otHs.js",s+"/_app/immutable/nodes/0.fq9GoBea.js",s+"/_app/immutable/assets/0.BByyDyWk.css",s+"/_app/immutable/nodes/1.z6y_bDwi.js",s+"/_app/immutable/nodes/2.DyuvfDKa.js",s+"/_app/immutable/assets/2.slFg4BNy.css",s+"/_app/immutable/nodes/3.CbLXvqlR.js",s+"/_app/immutable/assets/3.Bca70pWV.css",s+"/_app/immutable/nodes/4.CmTcvGsD.js",s+"/_app/immutable/assets/4.DfbfTWuz.css",s+"/_app/immutable/assets/BottomBar.BptJRINC.css",s+"/_app/immutable/chunks/BottomBar.DfU0nfSf.js",s+"/_app/immutable/chunks/appearance.PmRiRRxv.js",s+"/_app/immutable/chunks/class.7PBngDXZ.js",s+"/_app/immutable/chunks/disclose-version.BnyP3OB8.js",s+"/_app/immutable/chunks/entry.VdBkNANC.js",s+"/_app/immutable/chunks/index-client.BhUYpw5D.js",s+"/_app/immutable/chunks/index.FkR1yKTw.js",s+"/_app/immutable/chunks/index.qhLCbthJ.js",s+"/_app/immutable/chunks/legacy.Vqdj_PMR.js",s+"/_app/immutable/chunks/props.edKkFTeU.js",s+"/_app/immutable/chunks/render.DlAr8I1h.js",s+"/_app/immutable/chunks/scores.CM1Rnh9o.js",s+"/_app/immutable/chunks/settings._mfimNkJ.js",s+"/_app/immutable/chunks/slot.DDARBGDQ.js",s+"/_app/immutable/chunks/store.BWdm8UL4.js",s+"/_app/immutable/chunks/this.CHCpDkWg.js",s+"/_app/immutable/chunks/utils.Dhw7Y63s.js",s+"/_app/immutable/entry/start.CKq8dZvS.js"],o=[s+"/favicon.png",s+"/manifest.json"],h="1735588418051",i=`cache-${h}`,u=new Set([...l,...o]),n=self;n.addEventListener("install",e=>{e.waitUntil(caches.open(i).then(a=>(console.log("Caching static assets..."),a.addAll([...u]))).then(()=>{n.skipWaiting()}))});n.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(a=>Promise.all(a.map(t=>{if(t!==i)return console.log(`Deleting old cache: ${t}`),caches.delete(t)}))).then(()=>{n.clients.claim()}))});n.addEventListener("fetch",e=>{if(e.request.method!=="GET")return;const a=new URL(e.request.url),t=u.has(a.pathname);e.respondWith((async()=>{try{if(t){const m=await caches.match(e.request);if(m)return m}const c=await fetch(e.request);return(await caches.open(i)).put(e.request,c.clone()),c}catch(c){const p=await caches.match(e.request);if(p)return p;throw c}})())});
