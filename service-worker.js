const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/_app/immutable/entry/app.BdlI4pB5.js",s+"/_app/immutable/nodes/0.jDqWY3w1.js",s+"/_app/immutable/assets/0.G23u2aUf.css",s+"/_app/immutable/nodes/1.DRJRR4Ni.js",s+"/_app/immutable/nodes/2.CXyomm09.js",s+"/_app/immutable/assets/2.DFckzZQ0.css",s+"/_app/immutable/nodes/3.BjLWr-PS.js",s+"/_app/immutable/assets/3.CS4fC0T9.css",s+"/_app/immutable/nodes/4.DK5wFZII.js",s+"/_app/immutable/assets/4.CoAnYgbc.css",s+"/_app/immutable/nodes/5.Cm4y64rM.js",s+"/_app/immutable/assets/5.B1C8QOgE.css",s+"/_app/immutable/assets/BottomBar.CfPZ028i.css",s+"/_app/immutable/chunks/BottomBar.kOKUJFzP.js",s+"/_app/immutable/chunks/appearance.C6lf8wZM.js",s+"/_app/immutable/chunks/disclose-version.CYEZbGRd.js",s+"/_app/immutable/chunks/entry.D97ro_ix.js",s+"/_app/immutable/assets/glyphs.C1b1vRr7.css",s+"/_app/immutable/chunks/glyphs.DI0hEd2V.js",s+"/_app/immutable/chunks/index-client.SJPFcUSQ.js",s+"/_app/immutable/chunks/index.Dkn23xBm.js",s+"/_app/immutable/chunks/index.DrMsbBsN.js",s+"/_app/immutable/chunks/legacy.Dizh_e1X.js",s+"/_app/immutable/chunks/persistent-stores.Cu6bZ0Mm.js",s+"/_app/immutable/chunks/props.Ce0yfSwg.js",s+"/_app/immutable/chunks/render.BS6rv_sO.js",s+"/_app/immutable/chunks/settings.BEngTEVy.js",s+"/_app/immutable/chunks/store.DLGdLQ_h.js",s+"/_app/immutable/chunks/this.DCzmdEcR.js",s+"/_app/immutable/assets/times.JdoJDsOM.css",s+"/_app/immutable/chunks/times.DNwZd9S2.js",s+"/_app/immutable/chunks/utils.DXvTgAFw.js",s+"/_app/immutable/entry/start.CRzwheJQ.js"],o=[s+"/favicon.png",s+"/manifest.json",s+"/screenshots/play.png",s+"/screenshots/setup.png",s+"/screenshots/summary.png",s+"/screenshots/summary2.png"],r="1737109270180",m=`cache-${r}`,u=new Set([...l,...o]),n=self;n.addEventListener("install",e=>{e.waitUntil(caches.open(m).then(a=>(console.log("Caching static assets..."),a.addAll([...u]))).then(()=>{n.skipWaiting()}))});n.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(a=>Promise.all(a.map(t=>{if(t!==m)return console.log(`Deleting old cache: ${t}`),caches.delete(t)}))).then(()=>{n.clients.claim()}))});n.addEventListener("fetch",e=>{if(e.request.method!=="GET")return;const a=new URL(e.request.url),t=u.has(a.pathname);e.respondWith((async()=>{try{if(t){const i=await caches.match(e.request);if(i)return i}const p=await fetch(e.request);return(await caches.open(m)).put(e.request,p.clone()),p}catch(p){const c=await caches.match(e.request);if(c)return c;throw p}})())});
