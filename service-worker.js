const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/_app/immutable/entry/app.t4J8VgcJ.js",s+"/_app/immutable/nodes/0.Djc-imkP.js",s+"/_app/immutable/assets/0.BByyDyWk.css",s+"/_app/immutable/nodes/1.BjgRegdU.js",s+"/_app/immutable/nodes/2.BqwZeD_z.js",s+"/_app/immutable/assets/2.slFg4BNy.css",s+"/_app/immutable/nodes/3.CBwO0suZ.js",s+"/_app/immutable/assets/3.Bca70pWV.css",s+"/_app/immutable/nodes/4.lFSN3Wl6.js",s+"/_app/immutable/assets/4.DmukdxW4.css",s+"/_app/immutable/assets/BottomBar.BptJRINC.css",s+"/_app/immutable/chunks/BottomBar.D3-QzMje.js",s+"/_app/immutable/chunks/appearance.CmLdBTec.js",s+"/_app/immutable/chunks/class.CG3TR01b.js",s+"/_app/immutable/chunks/disclose-version.BUA5OMwm.js",s+"/_app/immutable/chunks/entry.B-b4rsbK.js",s+"/_app/immutable/chunks/index-client.CcZfx6tu.js",s+"/_app/immutable/chunks/index.CoOIDogu.js",s+"/_app/immutable/chunks/index.DZKq-CSd.js",s+"/_app/immutable/chunks/legacy.Dj62uwCN.js",s+"/_app/immutable/chunks/props.GRKGSCY3.js",s+"/_app/immutable/chunks/render.BzhloWRq.js",s+"/_app/immutable/chunks/scores.CBSKr-VJ.js",s+"/_app/immutable/chunks/settings.C6SVDol6.js",s+"/_app/immutable/chunks/slot.Bbps1u6E.js",s+"/_app/immutable/chunks/store.BWDhwiBo.js",s+"/_app/immutable/chunks/this.Ck1aqAe3.js",s+"/_app/immutable/chunks/utils.Orrw684n.js",s+"/_app/immutable/entry/start.C3ZKbZcg.js"],o=[s+"/favicon.png",s+"/manifest.json"],r="1735601020743",i=`cache-${r}`,u=new Set([...l,...o]),c=self;c.addEventListener("install",e=>{e.waitUntil(caches.open(i).then(a=>(console.log("Caching static assets..."),a.addAll([...u]))).then(()=>{c.skipWaiting()}))});c.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(a=>Promise.all(a.map(t=>{if(t!==i)return console.log(`Deleting old cache: ${t}`),caches.delete(t)}))).then(()=>{c.clients.claim()}))});c.addEventListener("fetch",e=>{if(e.request.method!=="GET")return;const a=new URL(e.request.url),t=u.has(a.pathname);e.respondWith((async()=>{try{if(t){const m=await caches.match(e.request);if(m)return m}const n=await fetch(e.request);return(await caches.open(i)).put(e.request,n.clone()),n}catch(n){const p=await caches.match(e.request);if(p)return p;throw n}})())});
