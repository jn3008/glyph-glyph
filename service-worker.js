const s=location.pathname.split("/").slice(0,-1).join("/"),u=[s+"/_app/immutable/entry/app.DH_oZdoY.js",s+"/_app/immutable/nodes/0.JKH-HOMW.js",s+"/_app/immutable/assets/0.DFekn62e.css",s+"/_app/immutable/nodes/1.4bsB91Ew.js",s+"/_app/immutable/nodes/2.Dhxub3mk.js",s+"/_app/immutable/assets/2.slFg4BNy.css",s+"/_app/immutable/nodes/3.V9J9B9xF.js",s+"/_app/immutable/assets/3.Bca70pWV.css",s+"/_app/immutable/nodes/4.CzdYTSEN.js",s+"/_app/immutable/assets/4.CsVRzedi.css",s+"/_app/immutable/assets/BottomBar.BYby23d0.css",s+"/_app/immutable/chunks/BottomBar.B4OBnRsj.js",s+"/_app/immutable/chunks/appearance.Dld82XYh.js",s+"/_app/immutable/chunks/class.BJT6LBsk.js",s+"/_app/immutable/chunks/disclose-version.D9MbeClJ.js",s+"/_app/immutable/chunks/entry.CpMoyh-S.js",s+"/_app/immutable/chunks/index-client.C2B59STt.js",s+"/_app/immutable/chunks/index.D_PKFVvz.js",s+"/_app/immutable/chunks/index.vaU9l4Y9.js",s+"/_app/immutable/chunks/legacy.CYPYTLD4.js",s+"/_app/immutable/chunks/props.C1nJFS3o.js",s+"/_app/immutable/chunks/render.DbwWhMdO.js",s+"/_app/immutable/chunks/scores.CJAld1A1.js",s+"/_app/immutable/chunks/settings.t6vk2JNQ.js",s+"/_app/immutable/chunks/slot.a3djEURj.js",s+"/_app/immutable/chunks/store.AdV-Kzmu.js",s+"/_app/immutable/chunks/this.bhD6bd6o.js",s+"/_app/immutable/chunks/utils.BBSL6nIp.js",s+"/_app/immutable/entry/start.HQIw5ogl.js"],o=[s+"/favicon.png",s+"/manifest.json",s+"/screenshots/play.png",s+"/screenshots/setup.png"],h="1735862171083",i=`cache-${h}`,l=new Set([...u,...o]),n=self;n.addEventListener("install",e=>{e.waitUntil(caches.open(i).then(a=>(console.log("Caching static assets..."),a.addAll([...l]))).then(()=>{n.skipWaiting()}))});n.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(a=>Promise.all(a.map(t=>{if(t!==i)return console.log(`Deleting old cache: ${t}`),caches.delete(t)}))).then(()=>{n.clients.claim()}))});n.addEventListener("fetch",e=>{if(e.request.method!=="GET")return;const a=new URL(e.request.url),t=l.has(a.pathname);e.respondWith((async()=>{try{if(t){const m=await caches.match(e.request);if(m)return m}const c=await fetch(e.request);return(await caches.open(i)).put(e.request,c.clone()),c}catch(c){const p=await caches.match(e.request);if(p)return p;throw c}})())});
